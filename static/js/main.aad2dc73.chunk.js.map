{"version":3,"sources":["utils/constants.js","store/redux/app.js","utils/helpers.js","store/redux/index.js","store/index.js","containers/Layout/index.js","components/LoadingIndicator/index.js","routes.js","App.js","containers/LanguageProvider/index.js","containers/LanguageProvider/vi.js","containers/LanguageProvider/en.js","containers/ThemeProvider/common.js","containers/ThemeProvider/index.js","containers/ThemeProvider/light.js","containers/ThemeProvider/dark.js","index.js"],"names":["SUPPORTED_THEMES","DEFAULT_THEME","SUPPORTED_LOCALES","initialState","theme","locale","types","Proxy","SET_APP_THEME","SET_APP_LOCALE","get","target","prop","reducer","handlers","state","action","produce","draft","isFunction","type","createReducer","includes","selectors","selectApp","app","makeSelectTheme","createSelector","this","makeSelectLocale","createRootReducer","combineReducers","appReducer","configureStore","composeEnhancers","compose","middlewares","enhancers","applyMiddleware","store","createStore","history","Layout","children","LoadingIndicator","loading","restProps","spinning","routes","path","name","component","App","fallback","map","rest","messages","vi","en","LanguageProvider","useSelector","styles","themes","light","dark","ThemeProvider","themeName","common","MOUNT_NODE","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.aad2dc73.chunk.js","sourcesContent":["export const SUPPORTED_THEMES = ['light', 'dark']\n\nexport const DEFAULT_THEME = 'light'\n\nexport const SUPPORTED_LOCALES = ['vi', 'en']\n\nexport const DEFAULT_LOCALE = 'vi'\n","import { createSelector } from 'reselect'\n\nimport { SUPPORTED_THEMES, DEFAULT_THEME, SUPPORTED_LOCALES, DEFAULT_LOCALE } from '../../utils/constants'\nimport { createReducer } from '../../utils/helpers'\n\nconst initialState = {\n  theme: DEFAULT_THEME,\n  locale: DEFAULT_LOCALE,\n}\n\nexport const types = new Proxy({\n  SET_APP_THEME: 'SET_APP_THEME',\n  SET_APP_LOCALE: 'SET_APP_LOCALE',\n}, {\n  get: (target, prop) => target[prop] ? `valonekowd/app/${target[prop]}` : target[prop],\n})\n\nexport const actions = {\n  setAppTheme: theme => ({ type: types.SET_APP_THEME, theme }),\n  setAppLocale: locale => ({ type: types.SET_APP_LOCALE, locale }),\n}\n\nexport const reducer = createReducer(initialState, {\n  [types.SET_APP_THEME]: (draft, { theme }) => {\n    if (SUPPORTED_THEMES.includes(theme)) {\n      draft.theme = theme\n    }\n  },\n  [types.SET_APP_LOCALE]: (draft, { locale }) => {\n    if (SUPPORTED_LOCALES.includes(locale)) {\n      draft.locale = locale\n    }\n  },\n})\n\nexport const selectors = {\n  selectApp: state => state.app || initialState,\n  makeSelectTheme() {\n    return createSelector(this.selectApp, ({ theme }) => theme || DEFAULT_THEME)\n  },\n  makeSelectLocale() {\n    return createSelector(this.selectApp, ({ locale }) => locale || DEFAULT_LOCALE)\n  },\n}\n","import { produce } from 'immer'\nimport { isFunction } from 'lodash'\n\nexport const createReducer = (initialState = {}, handlers = {}) =>\n  (state = initialState, action) =>\n    produce(state, draft => {\n      if (isFunction(handlers[action.type])) {\n        return handlers[action.type](draft, action)\n      }\n    })\n","import { combineReducers } from 'redux'\n\nimport { reducer as appReducer } from './app'\n\nconst createRootReducer = () => {\n  const rootReducer = combineReducers({\n    app: appReducer,\n  })\n\n  return rootReducer\n}\n\nexport default createRootReducer\n","import { applyMiddleware, compose, createStore } from 'redux'\n\nimport createRootReducer from './redux'\n\nconst configureStore = (initialState = {}) => {\n  const composeEnhancers = compose\n\n  const middlewares = []\n\n  const enhancers = [applyMiddleware(...middlewares)]\n\n  const store = createStore(\n    createRootReducer(history),\n    initialState,\n    composeEnhancers(...enhancers),\n  )\n\n  return store\n}\n\nexport default configureStore\n","import { Layout as BaseLayout } from 'antd'\n\nconst Layout = ({ children }) => (\n  <BaseLayout>\n    {children}\n  </BaseLayout>\n)\n\nexport default Layout\n\n","import { Spin } from 'antd'\n\nconst LoadingIndicator = ({ loading = true, children, ...restProps }) => (\n  <Spin spinning={loading} {...restProps}>\n    {children}\n  </Spin>\n)\n\nexport default LoadingIndicator\n","// import { lazy as baseLazy } from 'react'\n\n// const lazy = importedPromise => baseLazy(\n//   () => Promise.all([\n//     importedPromise,\n//     new Promise(resolve => setTimeout(resolve, 300)),\n//   ]).then(([importedModule]) => importedModule),\n// )\n\n// const DashboardPage = lazy(import(/* webpackChunkName: \"dashboard\" */ './containers/DashboardPage'))\n// const CallLogPage = lazy(import(/* webpackChunkName: \"call-log\" */ './containers/CallLogPage'))\n// const NotFoundPage = lazy(import(/* webpackChunkName: \"not-found\" */ './containers/NotFoundPage'))\n\nconst Abc = () => <div>Dong handsome</div>\n\nconst routes = [\n//   { path: '/dashboard', name: 'Dashboard', component: DashboardPage },\n//   { path: '/call-log', name: 'CallLog', component: CallLogPage },\n//   { name: 'NotFound', component: NotFoundPage },\n  { path: '/', name: 'NotFound', component: Abc },\n]\n\nexport default routes\n","import { Suspense } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport Layout from './containers/Layout'\nimport LoadingIndicator from './components/LoadingIndicator'\nimport routes from './routes'\n\nconst App = () => (\n  <Layout>\n    <BrowserRouter>\n      <Suspense fallback={<LoadingIndicator />}>\n        <Switch>\n          {routes.map(({ name, component, ...rest }) => component && (\n            <Route\n              key={name}\n              component={component}\n              {...rest}\n            />\n          ))}\n        </Switch>\n      </Suspense>\n    </BrowserRouter>\n  </Layout>\n)\n\nexport default App\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { IntlProvider } from 'react-intl'\n\nimport { selectors } from '../../store/redux/app'\nimport vi from './vi'\nimport en from './en'\n\nconst messages = { vi, en }\n\nconst LanguageProvider = ({ children }) => {\n  const locale = useSelector(selectors.makeSelectLocale())\n\n  return (\n    <IntlProvider key={locale} locale={locale} messages={messages[locale]}>\n      {children}\n    </IntlProvider>\n  )\n}\n\nexport default (LanguageProvider)\n","export default {}\n","export default {}\n","const styles = {}\n\nexport default styles\n","import { useSelector } from 'react-redux'\nimport { ThemeProvider as BaseThemeProvider } from 'styled-components'\n\nimport { selectors } from '../../store/redux/app'\nimport common from './common'\nimport light from './light'\nimport dark from './dark'\n\nconst themes = {\n  light,\n  dark,\n}\n\nconst ThemeProvider = ({ children }) => {\n  const themeName = useSelector(selectors.makeSelectTheme())\n\n  const theme = {\n    ...common,\n    ...themes[themeName],\n  }\n\n  return (\n    <BaseThemeProvider theme={theme}>\n      {children}\n    </BaseThemeProvider>\n  )\n}\n\nexport default ThemeProvider\n","const styles = {}\n\nexport default styles\n","const styles = {}\n\nexport default styles\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport configureStore from './store'\nimport App from './App'\nimport LanguageProvider from './containers/LanguageProvider'\nimport ThemeProvider from './containers/ThemeProvider'\n\nconst initialState = {}\nconst store = configureStore(initialState)\nconst MOUNT_NODE = document.getElementById('root')\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <LanguageProvider>\n        <ThemeProvider>\n          <App />\n        </ThemeProvider>\n      </LanguageProvider>\n    </Provider>\n  </React.StrictMode>,\n  MOUNT_NODE,\n)\n"],"sourceRoot":""}