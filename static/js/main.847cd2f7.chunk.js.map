{"version":3,"sources":["utils/constants.js","store/redux/app.js","utils/helpers.js","store/redux/index.js","store/index.js","containers/Layout/messages.js","containers/Layout/Header.js","containers/Layout/Footer.js","containers/Layout/index.js","containers/GlobalStyles/index.js","components/LoadingIndicator/index.js","routes.js","App.js","containers/LanguageProvider/index.js","containers/LanguageProvider/vi.js","containers/LanguageProvider/en.js","containers/ThemeProvider/common.js","containers/ThemeProvider/index.js","containers/ThemeProvider/light.js","containers/ThemeProvider/dark.js","index.js"],"names":["SUPPORTED_THEMES","DEFAULT_THEME","SUPPORTED_LOCALES","initialState","theme","locale","types","Proxy","SET_APP_THEME","SET_APP_LOCALE","get","target","prop","reducer","handlers","state","action","produce","draft","isFunction","type","createReducer","includes","selectors","selectApp","app","makeSelectTheme","createSelector","this","makeSelectLocale","createRootReducer","combineReducers","appReducer","configureStore","composeEnhancers","compose","middlewares","enhancers","applyMiddleware","store","createStore","history","defineMessages","scope","messageObj","isObject","sth","messages","baseDefineMessages","finalScope","isString","length","id","defaultMessage","home","about","blog","menuItems","Header","useHistory","useState","current","setCurrent","useEffect","push","mode","selectedKeys","onClick","key","Object","keys","map","Item","Footer","Content","BaseLayout","Layout","children","GlobalStyle","createGlobalStyle","LoadingIndicator","loading","restProps","spinning","lazy","importedPromise","baseLazy","Promise","all","resolve","setTimeout","then","routes","path","name","component","exact","AppWrapper","styled","div","App","Helmet","titleTemplate","defaultTitle","content","fallback","rest","GlobalStyles","vi","en","LanguageProvider","useSelector","styles","themes","light","dark","ThemeProvider","themeName","common","MOUNT_NODE","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.847cd2f7.chunk.js","sourcesContent":["export const SUPPORTED_THEMES = ['light', 'dark']\n\nexport const DEFAULT_THEME = 'light'\n\nexport const SUPPORTED_LOCALES = ['vi', 'en']\n\nexport const DEFAULT_LOCALE = 'en'\n","import { createSelector } from 'reselect'\n\nimport { SUPPORTED_THEMES, DEFAULT_THEME, SUPPORTED_LOCALES, DEFAULT_LOCALE } from '../../utils/constants'\nimport { createReducer } from '../../utils/helpers'\n\nconst initialState = {\n  theme: DEFAULT_THEME,\n  locale: DEFAULT_LOCALE,\n}\n\nexport const types = new Proxy({\n  SET_APP_THEME: 'SET_APP_THEME',\n  SET_APP_LOCALE: 'SET_APP_LOCALE',\n}, {\n  get: (target, prop) => target[prop] ? `valonekowd/app/${target[prop]}` : target[prop],\n})\n\nexport const actions = {\n  setAppTheme: theme => ({ type: types.SET_APP_THEME, theme }),\n  setAppLocale: locale => ({ type: types.SET_APP_LOCALE, locale }),\n}\n\nexport const reducer = createReducer(initialState, {\n  [types.SET_APP_THEME]: (draft, { theme }) => {\n    if (SUPPORTED_THEMES.includes(theme)) {\n      draft.theme = theme\n    }\n  },\n  [types.SET_APP_LOCALE]: (draft, { locale }) => {\n    if (SUPPORTED_LOCALES.includes(locale)) {\n      draft.locale = locale\n    }\n  },\n})\n\nexport const selectors = {\n  selectApp: state => state.app || initialState,\n  makeSelectTheme() {\n    return createSelector(this.selectApp, ({ theme }) => theme || DEFAULT_THEME)\n  },\n  makeSelectLocale() {\n    return createSelector(this.selectApp, ({ locale }) => locale || DEFAULT_LOCALE)\n  },\n}\n","import { produce } from 'immer'\nimport { isFunction, isString, isObject } from 'lodash'\nimport { defineMessages as baseDefineMessages } from 'react-intl'\n\nexport const isValidString = sth => isString(sth) && sth.length > 0\n\nexport const createReducer = (initialState = {}, handlers = {}) =>\n  (state = initialState, action) =>\n    produce(state, draft => {\n      if (isFunction(handlers[action.type])) {\n        return handlers[action.type](draft, action)\n      }\n    })\n\nexport const defineMessages = (scope, messageObj) => {\n  if (!isObject(messageObj)) {\n    return messageObj\n  }\n\n  const messages = baseDefineMessages(messageObj)\n\n  let finalScope = scope\n  if (!isValidString(finalScope)) {\n    finalScope = 'valonekowd.app'\n  }\n\n  const proxy = new Proxy(messages, {\n    get: (target, prop) => ({\n      id: `${finalScope}.${prop}`,\n      defaultMessage: isString(target[prop]) ? target[prop] : 'ğŸ”¥',\n    }),\n  })\n\n  return proxy\n}\n","import { combineReducers } from 'redux'\n\nimport { reducer as appReducer } from './app'\n\nconst createRootReducer = () => {\n  const rootReducer = combineReducers({\n    app: appReducer,\n  })\n\n  return rootReducer\n}\n\nexport default createRootReducer\n","import { applyMiddleware, compose, createStore } from 'redux'\n\nimport createRootReducer from './redux'\n\nconst configureStore = (initialState = {}) => {\n  const composeEnhancers = compose\n\n  const middlewares = []\n\n  const enhancers = [applyMiddleware(...middlewares)]\n\n  const store = createStore(\n    createRootReducer(history),\n    initialState,\n    composeEnhancers(...enhancers),\n  )\n\n  return store\n}\n\nexport default configureStore\n","import { defineMessages } from '../../utils/helpers'\n\nexport default defineMessages('valonekowd.containers.Layout', {\n  home: 'Home',\n  about: 'About',\n  blog: 'Blog',\n})\n","import { useEffect, useState } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport { FormattedMessage } from 'react-intl'\nimport { Layout, Menu } from 'antd'\n\nimport messages from './messages'\n\nconst menuItems = {\n  home: '',\n  about: '/about',\n  blog: '/blog',\n}\n\nconst Header = () => {\n  const history = useHistory()\n  const [current, setCurrent] = useState([])\n\n  useEffect(() => {\n    history.push(menuItems[current])\n  }, [current])\n\n  const handleClick = ({ key }) => {\n    setCurrent(key)\n  }\n\n  return (\n    <Layout.Header>\n      <Menu\n        mode=\"horizontal\"\n        selectedKeys={[current]}\n        onClick={handleClick}\n      >\n        {Object.keys(menuItems).map(key => (\n          <Menu.Item key={key}>\n            <FormattedMessage {...messages[key]} />\n          </Menu.Item>\n        ))}\n      </Menu>\n    </Layout.Header>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nconst Footer = () => (\n  <div>\n            Footer\n  </div>\n)\n\nexport default Footer\n","import { Layout as BaseLayout } from 'antd'\n\nimport Header from './Header'\nimport Footer from './Footer'\n\nconst { Content } = BaseLayout\n\nconst Layout = ({ children }) => (\n  <BaseLayout>\n    <Header />\n    <Content>\n      {children}\n    </Content>\n    <Footer/>\n  </BaseLayout>\n)\n\nexport default Layout\n\n","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  html, body {\n    height: 100%;\n    width: 100%;\n    line-height: 1.5;\n  }\n\n  /* body {\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  }\n\n  body.fontLoaded {\n    font-family: 'Open Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  } */\n\n  #root {\n    background-color: #e8d5b6;\n    min-height: 100%;\n    min-width: 100%;\n  }\n\n  /* p, label {\n    font-family: Georgia, Times, 'Times New Roman', serif;\n    line-height: 1.5em;\n  } */\n`\n\nexport default GlobalStyle\n","import { Spin } from 'antd'\n\nconst LoadingIndicator = ({ loading = true, children, ...restProps }) => (\n  <Spin spinning={loading} {...restProps}>\n    {children}\n  </Spin>\n)\n\nexport default LoadingIndicator\n","import { lazy as baseLazy } from 'react'\n\nconst lazy = importedPromise => baseLazy(\n  () => Promise.all([\n    importedPromise,\n    new Promise(resolve => setTimeout(resolve, 300)),\n  ]).then(([importedModule]) => importedModule),\n)\n\nconst HomePage = lazy(import(/* webpackChunkName: \"home\" */ './pages/Home'))\nconst AboutPage = lazy(import(/* webpackChunkName: \"about\" */ './pages/About'))\nconst BlogPage = lazy(import(/* webpackChunkName: \"blog\" */ './pages/Blog'))\n// const NotFoundPage = lazy(import(/* webpackChunkName: \"not-found\" */ './containers/NotFoundPage'))\n\nconst routes = [\n  { path: '/', name: 'Home', component: HomePage, exact: true },\n  { path: '/about', name: 'About', component: AboutPage },\n  { path: '/blog', name: 'Blog', component: BlogPage },\n//   { name: 'NotFound', component: NotFoundPage },\n]\n\nexport default routes\n","import { Suspense } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport styled from 'styled-components'\n\nimport Layout from './containers/Layout'\nimport GlobalStyles from './containers/GlobalStyles'\nimport LoadingIndicator from './components/LoadingIndicator'\nimport routes from './routes'\n\nconst AppWrapper = styled.div`\n  /* max-width: calc(768px + 16px * 2);\n  margin: 0 auto;\n  display: flex;\n  min-height: 100%;\n  padding: 0 16px;\n  flex-direction: column; */\n`\n\nconst App = () => (\n  <AppWrapper>\n    <Helmet\n      titleTemplate=\"%s - Dong Tran\"\n      defaultTitle=\"Dong Tran\"\n    >\n      <meta name=\"description\" content=\"A personal site of Dong Tran\" />\n    </Helmet>\n    <BrowserRouter>\n      <Layout>\n        <Suspense fallback={<LoadingIndicator />}>\n          <Switch>\n            {routes.map(({ name, component, ...rest }) => component && (\n              <Route\n                key={name}\n                component={component}\n                {...rest}\n              />\n            ))}\n          </Switch>\n        </Suspense>\n      </Layout>\n    </BrowserRouter>\n    <GlobalStyles />\n  </AppWrapper>\n)\n\nexport default App\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { IntlProvider } from 'react-intl'\n\nimport { selectors } from '../../store/redux/app'\nimport vi from './vi'\nimport en from './en'\n\nconst messages = { vi, en }\n\nconst LanguageProvider = ({ children }) => {\n  const locale = useSelector(selectors.makeSelectLocale())\n\n  return (\n    <IntlProvider key={locale} locale={locale} messages={messages[locale]}>\n      {children}\n    </IntlProvider>\n  )\n}\n\nexport default (LanguageProvider)\n","export default {}\n","export default {}\n","const styles = {}\n\nexport default styles\n","import { useSelector } from 'react-redux'\nimport { ThemeProvider as BaseThemeProvider } from 'styled-components'\n\nimport { selectors } from '../../store/redux/app'\nimport common from './common'\nimport light from './light'\nimport dark from './dark'\n\nconst themes = {\n  light,\n  dark,\n}\n\nconst ThemeProvider = ({ children }) => {\n  const themeName = useSelector(selectors.makeSelectTheme())\n\n  const theme = {\n    ...common,\n    ...themes[themeName],\n  }\n\n  return (\n    <BaseThemeProvider theme={theme}>\n      {children}\n    </BaseThemeProvider>\n  )\n}\n\nexport default ThemeProvider\n","const styles = {}\n\nexport default styles\n","const styles = {}\n\nexport default styles\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\n\nimport configureStore from './store'\nimport App from './App'\nimport LanguageProvider from './containers/LanguageProvider'\nimport ThemeProvider from './containers/ThemeProvider'\n\nimport 'antd/dist/antd.css'\n\nconst initialState = {}\nconst store = configureStore(initialState)\nconst MOUNT_NODE = document.getElementById('root')\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <LanguageProvider>\n        <ThemeProvider>\n          <App />\n        </ThemeProvider>\n      </LanguageProvider>\n    </Provider>\n  </React.StrictMode>,\n  MOUNT_NODE,\n)\n"],"sourceRoot":""}